{"version":3,"sources":["components/NavBar/index.js","components/Wrapper/index.js","components/Footer/index.js","components/ImageCard/index.js","components/Header/index.js","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","Fragment","className","href","score","topscore","Wrapper","children","Footer","ImageCard","alt","name","src","image","onClick","handleOnClick","id","Header","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","clickedImage","state","images","filter","alreadyBeenClicked","clicked","setState","forEach","console","log","bind","assertThisInitialized","_this2","NavBar","components_Header","components_Wrapper","map","card","components_ImageCard","key","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f8530b02.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return (\n    <>\n      <nav className=\"navbar sticky-top\">\n        <div className=\"container-fluid\">\n            <ul className=\"nav navbar-nav\">\n\n                <li className=\"navbar-brand\">\n                    <a href=\"/\">Memory Game</a>\n                </li>\n                 <li className=\"instructions\">\n                    May the Force be with you!\n                </li>\n                <li className=\"score\">\n                    Score: {props.score} | Top Score: {props.topscore}\n                </li>\n            </ul>\n        </div>\n      </nav>\n\n    \n    </>\n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"container wrapper-background\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from 'react';\nimport \"./style.css\";\n\nfunction Footer() {\n\treturn (\n\t\t<footer className=\"footer\">\n\t\t\t<div className=\"bottom\">\n\t\t\t\tStar Wars Memory Game {'\\u00A9'}\n\t\t\t</div>\n\t\t</footer>\n\t);\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img\n          alt={props.name}\n          src={props.image}\n          onClick={() => props.handleOnClick(props.id)}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default ImageCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header () {\n    return (\n        <div className=\"jumbotron jumbotron-fluid\">\n            \n                <h1>Star Wars Memory Game</h1>\n                <br></br>\n                <h2>Click an image to earn points, don't click the same image twice or game over!</h2>\n        </div>\n    );\n}\nexport default Header","import React, { Component } from \"react\";\nimport NavBar from './components/NavBar'\nimport Wrapper from './components/Wrapper'\nimport Footer from './components/Footer'\nimport ImageCard from './components/ImageCard'\nimport Header from './components/Header'\nimport images from './images.json'\n\nclass App extends Component {\n constructor(props) {\n   super(props)\n  this.state = {\n    images,\n    score: 0,\n    topscore: 0,\n  };\n  this.handleOnClick = this.handleOnClick.bind(this)\n}\n\n  shuffleArray = array => {\n    let currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n  \n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n  \n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n  \n    return array;\n  }; \n\nhandleOnClick = id => {\n  //grabs the id of the clicked image\n  \n  let clickedImage = this.state.images.filter(\n    image => image.id === id)[0];\n\n  //filters images that have already been clicked\n  let alreadyBeenClicked = this.state.images.filter(\n    image => image.clicked === true\n  );  \n\n  //handles switching the array to true and shuffles the images\n  if (clickedImage.clicked === false) {\n    clickedImage.clicked = true;\n    this.shuffleArray(images);\n\n    //changes score and topscore state\n    this.setState({\n      score: this.state.score + 1 , \n      topscore: this.state.score + 1 > this.state.topscore ? this.state.score + 1 : this.state.topscore\n    });   \n  } else if (clickedImage.clicked === true) { \n    alreadyBeenClicked.forEach(image => {\n      image.clicked = false;\n    });  \n    this.shuffleArray(images)\n    this.setState({\n      score: 0,\n    })\n  }\n\n  console.log(this.state.images)\n  console.log(this.state.score);\n  console.log(this.state.topscore);\n}\n\n  render() {\n    return (\n      <>      \n        <NavBar score={this.state.score} topscore={this.state.topscore} />\n        <Header />\n        <Wrapper>\n          {this.state.images.map(card => (\n            <ImageCard\n              id={card.id}\n              key={card.id}\n              name={card.name}\n              image={card.image}\n              handleOnClick={this.handleOnClick}\n            />\n          ))}\n        </Wrapper>\n        <Footer />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}